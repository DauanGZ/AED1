// AGENDA AED1 M3 Dauan Ghisleni Zolinger
// pBuffer-> [auxIntA|auxIntB|contadorPessoas|pessoas...]

#include <stdio.h>
#include <stdlib.h>

typedef struct pessoa{
    char nome[20];
    int idade, telefone;
} contato;

int main(){
    void *pBuffer;
    int *auxIntA, *auxIntB, *contadorPessoas;
    contato *pessoa;
    if((pBuffer= (void*) calloc(1, 3*sizeof(int) + sizeof(contato)))== NULL){
        printf("* ERRO na alocacao de memoria!");
        return(-1);
    }
    auxIntA= (int*) pBuffer;
    auxIntB= (int*) (auxIntA+1);
    contadorPessoas= (int*) (auxIntB+1);
    pessoa= (contato*) (contadorPessoas+1);
    do{
        printf("_____ MENU _____\n|\n| 1 Incluir\n| 2 Apagar\n| 3 Buscar\n| 4 Listar\n| 5 Sair\n|\n| Insira uma opcao: ");
        scanf("%d", auxIntA);
        getchar(); // Elimina o ENTER da opcao

        switch(*auxIntA){

            case 1: // incluir();
                printf("|\n----- INCLUIR --\n");{
                if(*contadorPessoas== 0){ // Insere primeira pessoa
                    *contadorPessoas= *contadorPessoas+1;
                    printf("\n|%.2d| Nome: ", *contadorPessoas);
                    gets(pessoa->nome);
                    printf("     Idade: ");
                    scanf("%d", &pessoa->idade);
                    printf("     Telefone: ");
                    scanf("%d", &pessoa->telefone);
                    printf("\n Incluido!\n\n");
                }
                else{
                    *contadorPessoas= *contadorPessoas+1;
                    if((pBuffer= (void*) realloc(pBuffer, (3*sizeof(int) + sizeof(float)+ (*contadorPessoas)*sizeof(contato))))== NULL){
                        printf("\n* ERRO na alocacao de memoria!\n");
                        return(-1);
                    }
                    auxIntA= (int*) pBuffer;
                    auxIntB= (int*) (auxIntA+1);
                    contadorPessoas= (int*) (auxIntB+1);
                    pessoa= ((contato*) (contadorPessoas+1)) + (*contadorPessoas-1);
                    printf("\n|%.2d| Nome: ", *contadorPessoas);
                    gets(pessoa->nome);
                    printf("     Idade: ");
                    scanf("%d", &pessoa->idade);
                    printf("     Telefone: ");
                    scanf("%d", &pessoa->telefone);
                    printf("\n Incluido!\n\n");
                }
                break;}

            case 2: // apagar();
                printf("|\n----- APAGAR ---\n");
                if(*contadorPessoas== 0){
                    printf("\n* Agenda vazia!\n\n");
                }
                else{

                    printf("\n Insira o indice do contato que deseja apagar: ");
                    scanf("%d", auxIntB);
                    pessoa= (contato*) (contadorPessoas+1);
                    for(*auxIntA= 1; *auxIntA<=*contadorPessoas; (*auxIntA)++){
                        if(*auxIntB==*auxIntA){
                        *pessoa->nome= NULL;
                        *pessoa->idade= NULL;
                        *pessoa->telefone= NULL;
                        }
                        pessoa= (pessoa+1);
                    }
                }
                break;

            case 3: // buscar();
                printf("|\n----- BUSCAR ---\n");{
                if(*contadorPessoas== 0){
                    printf("\n* Agenda vazia!\n\n");
                }
                else{
                    printf("\n Insira o indice do contato que deseja buscar: ");
                    scanf("%d", auxIntB);
                    pessoa= (contato*) (contadorPessoas+1);
                    for(*auxIntA= 1; *auxIntA<=*contadorPessoas; (*auxIntA)++){
                        if(*auxIntB== *auxIntA){
                            printf("\n|%.2d| %s", *auxIntA, pessoa->nome);
                            printf("\n     %d anos", pessoa->idade);
                            printf("\n     %d\n\n", pessoa->telefone);
                        }
                        pessoa= (pessoa+1);
                    }
                }
            break;}

            case 4: // listar();
                printf("|\n----- LISTAR ---\n");{
                if(*contadorPessoas== 0){
                    printf("\n* Agenda vazia!\n\n");
                }
                else{
                    pessoa= (contato*) (contadorPessoas+1);
                    for(*auxIntA= 1; *auxIntA<=*contadorPessoas; (*auxIntA)++){
                        printf("\n|%.2d| %s", *auxIntA, pessoa->nome);
                        printf("\n     %d anos", pessoa->idade);
                        printf("\n     %d\n\n", pessoa->telefone);
                        pessoa= (pessoa+1);
                    }
                }
            break;}

            case 5:
                printf("|\n_____ SAIR _____\n");{
                free(pBuffer);
            return(0);}

            default:
                printf("\n* Escolha invalida!\n\n");
                break;
        }
    } while(1);
}
